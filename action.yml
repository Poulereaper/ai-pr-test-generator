name: 'AI-based PR Test Generator'
description: 'AI-based PR that cheks the code changes and generates test cases if needed'
branding:
  icon: 'git-merge'
  color: 'purple'
author: 'CISO ASSISTANT TEAM' 
inputs:
  #Debug option
  debug:
    required: false
    description: 'Enable debug mode'
    default: 'false'

  # Basic Configuration and varibales needed 
  max_files:
    required: false
    description:
      'Max files to summarize and review. Less than or equal to 0 means no
      limit.'
    default: '150'
  review_simple_changes:
    required: false
    description: 'Review even when the changes are simple'
    default: 'false'
  review_comment_lgtm:
    required: false
    description: 'Leave comments even if the patch is LGTM'
    default: 'false'
  path_filters:
    required: false
    description: |
      The path filters, e.g., "src/**.py", "!dist/**", each line will be considered as one pattern.
      See also

      - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
      - https://github.com/isaacs/minimatch
    default: |
      !dist/**
      !**/*.app
      !**/*.bin
      !**/*.bz2
      !**/*.class
      !**/*.db
      !**/*.csv
      !**/*.tsv
      !**/*.dat
      !**/*.dll
      !**/*.dylib
      !**/*.egg
      !**/*.glif
      !**/*.gz
      !**/*.xz
      !**/*.zip
      !**/*.7z
      !**/*.rar
      !**/*.zst
      !**/*.ico
      !**/*.jar
      !**/*.tar
      !**/*.war
      !**/*.lo
      !**/*.log
      !**/*.mp3
      !**/*.wav
      !**/*.wma
      !**/*.mp4
      !**/*.avi
      !**/*.mkv
      !**/*.wmv
      !**/*.m4a
      !**/*.m4v
      !**/*.3gp
      !**/*.3g2
      !**/*.rm
      !**/*.mov
      !**/*.flv
      !**/*.iso
      !**/*.swf
      !**/*.flac
      !**/*.nar
      !**/*.o
      !**/*.ogg
      !**/*.otf
      !**/*.p
      !**/*.pdf
      !**/*.doc
      !**/*.docx
      !**/*.xls
      !**/*.xlsx
      !**/*.ppt
      !**/*.pptx
      !**/*.pkl
      !**/*.pickle
      !**/*.pyc
      !**/*.pyd
      !**/*.pyo
      !**/*.pub
      !**/*.pem
      !**/*.rkt
      !**/*.so
      !**/*.ss
      !**/*.eot
      !**/*.exe
      !**/*.pb.go
      !**/*.lock
      !**/*.ttf
      !**/*.yaml
      !**/*.yml
      !**/*.cfg
      !**/*.toml
      !**/*.ini
      !**/*.mod
      !**/*.sum
      !**/*.work
      !**/*.json
      !**/*.mmd
      !**/*.svg
      !**/*.jpeg
      !**/*.jpg
      !**/*.png
      !**/*.gif
      !**/*.bmp
      !**/*.tiff
      !**/*.webm
      !**/*.woff
      !**/*.woff2
      !**/*.dot
      !**/*.md5sum
      !**/*.wasm
      !**/*.snap
      !**/*.parquet
      !**/gen/**
      !**/_gen/**
      !**/generated/**
      !**/@generated/**
      !**/vendor/**
      !**/*.min.js
      !**/*.min.js.map
      !**/*.min.js.css
      !**/*.tfstate
      !**/*.tfstate.backup
  disable_test:
    required: false
    description: 'Only provide the information that the code could need test modificatioon and skip suggestion of tests.'
    default: 'false'

  # AI API Configuration
  ai_api_base_url:
    required: false
    description: 'The url of the openai api interface.'
    default: 'https://api.openai.com/v1'
  ai_api:
    required: false
    description: 'The AI API to use. This project will provide support for
      - OpenAI API : openai
      - Claude AI API : claude
      - Mistral AI API : mistral
      - Gemini AI API : gemini'
    default: 'mistral'
  ai_light_model_uses:
    required: false
    description:
      'Decide if we use only one or two models, if flase only the heavy model will be used'
    default: 'true'
  ai_light_model:
    required: false
    description: 'The light model to use. This project will provide support for
      - OpenAI API : gpt-3.5-turbo
      - Claude AI API : claude-instant
      - Mistral AI API : mistral-small-latest
      - Gemini AI API : gemini-1.5-turbo'
    default: 'mistral-small-latest'
  ai_heavy_model:
    required: false
    description: 'The heavy model to use. This project will provide support for
      - OpenAI API : gpt-4
      - Claude AI API : claude
      - Mistral AI API : mistral
      - Gemini AI API : gemini'
    default: 'mistral-large-latest  '
  ai_model_temperature:
    required: false
    description: 'Temperature for model if available'
    default: '0.05'
  ai_retries:
    required: false
    description:
      'How many times to retry AI API in case of timeouts or errors?'
    default: '5'
  ai_timeout_ms:
    required: false
    description: 'Timeout for AI API call in millis'
    default: '360000'
  ai_max_tokens:
    required: false
    description: 'Max tokens for AI API call - temp and will be replaced by light or heavy max tokens'
    default: '80000'
  ai_max_tokens_light:
    required: false
    description: 'Max tokens for AI light model API call'
    default: '10000'
  ai_max_tokens_heavy:
    required: false
    description: 'Max tokens for AI heavy model API call'
    default: '150000'
  price_per_token:
    required: false
    description: 'Price per 1k tokens for AI API'
    default: '0.002'
  price_per_token_out:
    required: false
    description: 'Price per 1k tokens for AI API outpout'
    default: '0.01'
  price_per_token_light:
    required: false
    description: 'Price per 1k tokens for AI light model API'
    default: '0.001'
  price_per_token_light_out:
    required: false
    description: 'Price per 1k tokens for AI light model API outpout'
    default: '0.004'
  price_per_token_heavy:
    required: false
    description: 'Price per 1k tokens for AI heavy model API'
    default: '0.005'
  price_per_token_heavy_out:
    required: false
    description: 'Price per 1k tokens for AI heavy model API outpout'
    default: '0.0016'
  ai_concurrency_limit:
    required: false
    description: 'How many concurrent API calls to make to AI servers?'
    default: '6'
  ai_or_no_ai:
    required: false
    description: 'Debugging flag to indicate if AI is enabled or not (use it for debbug to avoid paying for AI calls) -> true = AI enabled, false = AI disabled'
    default: 'true'

  # GitHub API Configuration
  github_concurrency_limit:
    required: false
    description: 'How many concurrent API calls to make to GitHub?'
    default: '6'

  # Bot Configuration - feel free to especially change these to your own needs
  system_message:
    required: false
    description: 'System message to be sent to AI API'
    default: |
      You are @codeoctopusai (aka github-actions[bot] or `AI Test Generator Bot`, a specialized language model designed to analyze code changes in pull requests and generate comprehensive test suites. Your purpose is to act as a highly experienced test engineer and provide thorough test implementations and analysis.

      ## Your Core Responsibilities:

      ### Test Generation:
      - Generate comprehensive unit tests, integration tests, and edge case scenarios
      - Create tests that cover all code paths, including error conditions
      - Ensure tests are maintainable, readable, and follow testing best practices
      - Use appropriate testing frameworks and mocking strategies
      - Include setup, teardown, and test data management

      ### Test Analysis:
      - Analyze code changes to identify what needs testing
      - Explain test requirements and testing strategies
      - Identify missing test coverage in existing code
      - Suggest improvements to existing test suites

      ### Security Testing:
      - Identify potential security vulnerabilities in code
      - Generate security-focused tests for authentication, authorization, input validation
      - Test for common security issues: SQL injection, XSS, CSRF, etc.
      - Validate error handling doesn't leak sensitive information

      ### Key Focus Areas:
      - **Coverage**: Ensure all code paths, branches, and edge cases are tested
      - **Reliability**: Create stable, deterministic tests that don't flake
      - **Performance**: Include performance tests when relevant
      - **Error Handling**: Thoroughly test error conditions and exceptions
      - **Data Validation**: Test input validation and boundary conditions
      - **Integration**: Test interactions between components and external systems
      - **Mocking**: Properly isolate units under test using mocks and stubs

      ### Testing Best Practices:
      - Follow AAA pattern (Arrange, Act, Assert)
      - Use descriptive test names that explain the scenario
      - Keep tests focused on single responsibilities
      - Ensure tests are independent and can run in any order
      - Use appropriate assertion methods for better error messages
      - Include both positive and negative test cases

      ## Response Format:
      - Provide complete, runnable test code
      - Include necessary imports and setup
      - Add clear comments explaining complex test scenarios
      - Suggest test file organization and naming conventions
      - When explaining tests, be specific about what should be tested and why

      ## Context Awareness:
      You will receive information about:
      - Modified files in the PR and their content
      - Related files and dependencies
      - Existing test files that might need updates
      - User's specific requirements or custom prompts

      Focus on generating high-quality, production-ready tests that improve code reliability and maintainability. Prioritize comprehensive coverage over minor style preferences.
  your_test_gen_bot_name:
    required: false
    description: 'The name of the bot that will be used to comment on the PR - Feel free to change it to your own bot name ;)'
    default: 'AI Test Generator Bot'
  project_context:
    required: false
    description: 'The context of the project, Take time to provide a good context, explain what your tests (backend or frontend) should do and what is used in the project, this will help the bot to generate better tests.'
    default: 'No project context provided by the user.'
  language:
    required: false
    description: ISO code for the response language
    default: en-US
  bot_icon:
    required: false
    description: 'The icon for the bot'
    default: '<img src="https://avatars.githubusercontent.com/in/347564?s=41" alt="Image description" width="20" height="20">'
runs:
  using: 'node16'
  main: 'dist/index.js'
